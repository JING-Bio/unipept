voor elke sequentie hoeveel keer hij voorkomt
SELECT query.sequenceId, query.speciesId, aantal_genomen_met_voorkomen, aantal_genomen, (aantal_genomen_met_voorkomen/aantal_genomen) AS procentueel FROM
  (SELECT sequenceId, speciesId, COUNT(DISTINCT organismId) AS aantal_genomen_met_voorkomen 
  FROM unipept.peptide 
  INNER JOIN unipept.organism ON (organism.id = peptide.organismId)
  GROUP BY sequenceId, speciesId) AS query
INNER JOIN
  (SELECT speciesId, COUNT(*) AS aantal_genomen FROM unipept.organism GROUP BY speciesId) AS aantallen
ON (query.speciesId = aantallen.speciesId)

===========================================
histogrammen
===========================================

#1 histogram
SELECT voorkomens, COUNT(*) AS aantal FROM
	(SELECT sequenceId, COUNT(*) AS voorkomens FROM unipept.peptide GROUP BY sequenceId) AS filter
GROUP BY voorkomens

#2 histogram
SELECT voorkomens, COUNT(*) as aantal FROM 
  (SELECT sequenceId, COUNT(*) AS voorkomens FROM
    (SELECT DISTINCT sequenceId, organismId FROM unipept.peptide) AS distinct_organism
  GROUP BY sequenceId) AS filter
GROUP BY voorkomens

#3 histogram
SELECT voorkomens, COUNT(*) as aantal FROM 
  (SELECT sequenceId, COUNT(*) AS voorkomens FROM
    (SELECT DISTINCT sequenceId, speciesId FROM unipept.peptide 
    INNER JOIN unipept.organism ON (organism.id = peptide.organismId)) 
    AS distinct_species
  GROUP BY sequenceId) AS filter
GROUP BY voorkomens

#4 histogram
SELECT voorkomens, COUNT(*) as aantal FROM 
  (SELECT sequenceId, COUNT(*) AS voorkomens FROM
    (SELECT DISTINCT sequenceId, genusId FROM unipept.peptide 
    INNER JOIN unipept.organism ON (organism.id = peptide.organismId)) 
    AS distinct_genus
  GROUP BY sequenceId) AS filter
GROUP BY voorkomens



===========================================
varia
===========================================
aantal genomen per species:
SELECT speciesId, COUNT(*) AS aantal FROM unipept.organism GROUP BY speciesId

aantal genomen per genus:
SELECT genusId, COUNT(*) AS aantal FROM unipept.organism GROUP BY genusId

aantal species per genus:

totaal aantal peptiden per species:
SELECT speciesId, COUNT(*) AS aantal FROM unipept.peptide 
INNER JOIN unipept.organism ON (peptide.organismId = organism.id) 
GROUP BY speciesId;

aantal verschillende peptiden per species:
SELECT speciesId, COUNT(DISTINCT sequenceId) AS aantal FROM unipept.peptide 
INNER JOIN unipept.organism ON (peptide.organismId = organism.id)
GROUP BY speciesId


basis subquery voor unieke peptiden

(SELECT DISTINCT sequenceId, organismId, speciesId FROM `unipept`.`peptide` 
INNER JOIN unipept.organism ON (peptide.organismId=organism.id) 
ORDER BY sequenceId)

histogram voor aantal genomen binnen 1 species
SELECT aantal AS aantal_voorkomens, count(*) AS aantal FROM 
	(SELECT COUNT(DISTINCT organismId) AS aantal FROM `unipept`.`organism` 
	INNER JOIN unipept.peptide ON (organism.id = peptide.organismId)
	WHERE speciesId=1280
	GROUP BY peptide.sequenceId) AS filter
GROUP BY aantal

aantal peptiden die binnen de species in alle genomen voorkomen maar niet er buiten
SELECT COUNT(*) FROM
  (SELECT peptide.sequenceId, COUNT(DISTINCT speciesId) AS aantal FROM 
    (SELECT sequenceId, COUNT(DISTINCT organismId) AS aantal FROM `unipept`.`organism` 
    INNER JOIN unipept.peptide ON (organism.id = peptide.organismId)
    WHERE speciesId=1280
    GROUP BY peptide.sequenceId HAVING aantal = 15) AS filter
  INNER JOIN unipept.peptide
  ON (filter.sequenceId = peptide.sequenceId)
  INNER JOIN unipept.organism
  ON (peptide.organismId = organism.id)
  GROUP BY peptide.sequenceId HAVING aantal=1) AS bingo

