<div class="apidocs row">
  <div class="col-xs-9">
    <div class='page-header'>
      <h1 class='api-title'>
        <samp>unipept pept2ec</samp><br>
        <small>Returns all EC-numbers associated with a given tryptic peptide.</small>
      </h1>
    </div>
    <p>
      The <code>unipept pept2ec</code> command takes one or more tryptic peptides as input and returns a list of EC-numbers for each of them as output. The EC-numbers are calculated from all taxa associated with the UniProt entries that contain the given peptide. All this information is fetched by doing <a href='<%= api_apidocs_pept2ec_path %>' target='_blank'><span class="initialism">API</span>-requests</a> to the Unipept server.
    </p>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='input'>Input</h2>
      </div>
      <div class='card-supporting-text'>
        <p>
          The <code>unipept pept2ec</code> command expects tryptic peptides as input. The source of this input can be command line arguments, a file, or <i>standard input</i>. If input is supplied using multiple sources at the same time, the order of priority as described above is used.
    </p>
        <h4>Command line arguments</h4>
        <p>
          If input is supplied using command line arguments, the peptides must be separated by spaces.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2ec AALTER MDGTEYIIVK
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,</pre>
        <h4>File input</h4>
        <p>
          Use the <a href='#param-input'><samp>--input</samp> parameter</a> to specify a file to use as input. If input is supplied using a file, a single peptide per line is expected.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> cat input.txt
AALTER
MDGTEYIIVK
<b>$</b> unipept pept2ec --input input.txt
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,</pre>
        <h4>Standard input</h4>
        <p>
          If the command is run without arguments and no file is specified, <code>unipept pept2ec</code> will read its input from <i>standard input</i>. When <i>standard input</i> is used, a single peptide per line is expected.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> cat input.txt
AALTER
MDGTEYIIVK
<b>$</b> cat input | unipept pept2lca
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,</pre>
      </div>
    </div>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='output'>Output</h2>
      </div>
      <div class='card-supporting-text'>
        <p>
          The <code>unipept pept2ec</code> command outputs the list of associated EC-numbers for each of the (tryptic) input peptides that were found in the Unipept database. By default, the EC-number and peptide count are returned. By using the <a href='#param-all'><samp>--all</samp> parameter</a>, this can be supplemented with the name of the EC-number. Consult the <a href='<%= api_apidocs_pept2ec_path %>#response' target='_blank'><span class="initialism">API</span> documentation</a> for a detailed list of output fields. A selection of output fields can be specified with the <a href='#param-select'><samp>--select</samp> parameter</a>. By default, output is generated in csv format. By using the <a href='#param-format'><samp>--format</samp> parameter</a>, the format can be changed into json or xml. The output can be written to a file or to <i>standard output</i>.
    </p>
        <h4>File output</h4>
        <p>
          Use the <a href='#param-input'><samp>--output</samp> parameter</a> to specify an output file. If the file aready exists, the output will be appended to the end of the file.
    </p>
        <pre>
<b>$</b> unipept pept2ec --output output.txt AALTER MDGTEYIIVK
<b>$</b> cat output.txt
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,</pre>
        <h4>Standard output</h4>
        <p>
          If no output file is specified, <code>unipept pept2ec</code> will write its output to <i>standard output</i>.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2ec AALTER MDGTEYIIVK
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,
<b>$</b> unipept pept2go AALTER MDGTEYIIVK > output.txt
<b>$</b> cat output.txt
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,</pre>
      </div>
    </div>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='fasta'>Fasta support</h2>
      </div>
      <div class='card-supporting-text'>
        <p>
          The <code>unipept pept2ec</code> command supports input (from any source) in a fasta-like format (for example generated by the <a href='<%= api_clidocs_prot2pept_path %>'><samp>prot2pept</samp> command</a>). This format consists of a fasta header (a line starting with a <samp>&gt;</samp>), followed by one or more lines containing one peptide each. When this format is detected, the output will automatically include an extra information field containing the corresponding fasta header.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> cat input.txt
> header 1
AALTER
MDGTEYIIVK
> header 2
AALTER
<b>$</b> unipept pept2ec --input input.txt
fasta_header,peptide,total_protein_count,ec_number,ec_protein_count
> header 1,AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
> header 1,MDGTEYIIVK,4,,
> header 2,AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1</pre>
      </div>
    </div>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='options'>Command-line options</h2>
      </div>
      <div class='card-supporting-text'>
        <h3><samp>--equate</samp> / <samp>-e</samp> <small>Equate isoleucine and leucine</small></h3>
        <p>
          If the <code>--equate</code> flag is set, isoleucine (I) and leucine (L) are equated when matching tryptic peptides to UniProt entries. This is similar to checking the <i>Equate I and L?</i> checkbox when performing a search in the Unipept web interface.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2ec LLELGAPDLLVR
<b>$</b> unipept pept2go <b>--equate</b> LLELGAPDLLVR
peptide,total_protein_count,ec_number,ec_protein_count
LLELGAPDLLVR,499,2.7.7.6,495</pre>
        <h3><samp>--input</samp> / <samp>-i</samp> <small>Specify an input file</small></h3>
        <p>
          All Unipept <span class='initialism'>CLI</span> commands can process input from 3 sources: command line arguments, a file, or <i>standard input</i>. The optional <code>--input</code> option allows you to specify an input file. The file should contain a single peptide per line.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> cat input.txt
AALTER
OMGWTFBBQ
MDGTEYIIVK
<b>$</b> unipept pept2ec <b>--input</b> input.txt
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
MDGTEYIIVK,4,,</pre>
        <h3 id='param-output'><samp>--output</samp> / <samp>-o</samp> <small>Specify an output file</small></h3>
        <p>
          By default, the unipept commands write their output to <i>standard output</i>. Using the optional <code>--output</code> option allows you to specify a file to write the output to. If the file already exists, the output will be appended; if it doesn't, a new file will be created.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2ec <b>--output</b> output.txt AALTER
<b>$</b> cat output.txt
peptide,total_protein_count,ec_number,ec_protein_count
AALTER,1425,2.3.2.27 2.7.13.3 6.2.1.3 6.1.1.6 6.3.2.13 2.7.4.25 6.1.1.22 3.1.26.- 2.3.1.29 2.7.1.15 2.3.1.234 2.1.1.13 4.2.1.17 6.3.2.8 3.1.3.3 2.7.4.16 2.4.-.- 5.3.1.1 3.1.4.- 2.8.1.7 6.5.1.2 6.1.1.2 3.4.11.10 3.4.11.1 1.1.1.100 6.3.2.10 3.6.4.- 6.1.1.23 3.1.1.61 3.1.1.4 2.7.1.50 2.7.1.48 1.8.1.2 2.6.1.- 3.4.-.- 2.4.1.227 6.3.4.2 6.3.4.4 4.1.2.- 1.10.9.1 1.14.13.- 2.5.1.- 2.6.1.16 3.1.-.- 4.2.1.153 3.1.2.6 4.6.1.17 2.4.1.- 2.5.1.75 4.2.1.3 6.3.2.31 6.3.2.34 6.3.3.2 1.2.1.2 5.2.1.8 4.99.1.1 2.3.2.2 2.-.-.- 2.7.3.9 4.1.3.27 1.1.1.262 5.4.99.2 2.7.7.59 3.1.21.3 4.2.99.20 6.1.1.12 1.7.99.4,111 11 11 8 8 7 6 4 4 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1</pre>
        <h3 id='param-input'><samp>--select</samp> / <samp>-s</samp> <small>Specify the output fields</small></h3>
        <p>
          By default, the Unipept <span class='initialism'>CLI</span> commands output all information fields received from the Unipept server. The <code>--select</code> option allows you to control which fields are returned. A list of fields can be specified by a comma-separated list, or by using multiple <code>--select</code> options. A <samp>*</samp> can be used as a wildcard for field names. For example, <code>--select peptide,taxon*</code> will return the peptide field and all fields starting with <i>taxon</i>.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2lca <b>--select</b> peptide,taxon_id AALTER
peptide,taxon_id
AALTER,1
<b>$</b> unipept pept2lca <b>--select</b> peptide <b>--select</b> *name AALTER
peptide,taxon_name
AALTER,root</pre>
        <h3 id='param-format'><samp>--format</samp> / <samp>-f</samp> <small>Specify the output format</small></h3>
        <p>
          By default, the Unipept <span class='initialism'>CLI</span> commands return their output in <samp>csv</samp> format. The <code>--format</code> option allows you to select another format. Supported formats are <samp>csv</samp>, <samp>json</samp>, and <samp>xml</samp>.
    </p>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2lca <b>--format</b> json AALTER MDGTEYIIVK
[{"peptide":"AALTER","taxon_id":1,"taxon_name":"root","taxon_rank":"no rank"},{"peptide":"MDGTEYIIVK","taxon_id":1263,"taxon_name":"Ruminococcus","taxon_rank":"genus"}]
<b>$</b> unipept pept2lca <b>--format</b> xml AALTER MDGTEYIIVK
&lt;results&gt;&lt;result&gt;&lt;peptide&gt;AALTER&lt;/peptide&gt;&lt;taxon_id&gt;1&lt;/taxon_id&gt;&lt;taxon_name&gt;root&lt;/taxon_name&gt;&lt;taxon_rank&gt;no rank&lt;/taxon_rank&gt;&lt;/result&gt;&lt;result&gt;&lt;peptide&gt;MDGTEYIIVK&lt;/peptide&gt;&lt;taxon_id&gt;1263&lt;/taxon_id&gt;&lt;taxon_name&gt;Ruminococcus&lt;/taxon_name&gt;&lt;taxon_rank&gt;genus&lt;/taxon_rank&gt;&lt;/result&gt;&lt;/results&gt;</pre>
        <h3 id='param-all'><samp>--all</samp> / <samp>-a</samp> <small>Request additional information</small></h3>
        <p>
          By default, the Unipept <span class='initialism'>CLI</span> commands only request basic information from the Unipept server. By using the <code>--all</code> flag, you can request additional information fields such as the lineage of the returned taxa. You can use the <code>--select</code> option to select which fields are included in the output.
    </p>
        <div class="apidocs-callout apidocs-callout-warning">
          <h4>Performance penalty</h4>
          <p>Setting <code>--all</code> has a performance penalty inferred from additional database queries. Do not use this option unless the extra information fields are strictly needed.</p>
        </div>
        <h5>Example</h5>
        <pre>
<b>$</b> unipept pept2lca <b>--all</b> --select peptide,taxon_id,order* MDGTEYIIVK
peptide,taxon_id,order_id,order_name
MDGTEYIIVK,1263,186802,Clostridiales</pre>
        <h3><samp>--help</samp> / <samp>-h</samp> <small>Display help</small></h3>
        <p>
          This flag displays the help.
    </p>
      </div>
    </div>
  </div>
  <div class="col-xs-3">
    <%= render 'api/shared/sidebar' %>
  </div>
</div>
