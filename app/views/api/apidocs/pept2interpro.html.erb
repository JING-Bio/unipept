<div class="apidocs row">
  <div class="col-xs-9">
    <div class='page-header'>
      <h1 class='api-title'><span class="initialism">POST</span> /api/v1/pept2interpro
        <br>
        <small>Returns the functional InterPro entries associated with a given tryptic peptide.</small>
      </h1>
    </div>
    <p>
      This method returns the functional InterPro entries associated with a given tryptic peptide.
    </p>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='request'>Request</h2>
      </div>
      <div class='card-supporting-text'>
        <p>
          The pept2interpro method can be used by doing a <span class="initialism">HTTP</span> <span class="initialism">POST</span>-request (preferred) or <span class="initialism">GET</span>-request to <code>http://<%= Rails.application.config.api_host %>/api/v1/pept2interpro</code>. <a href="#parameters">Parameters</a> can be included in the request body (<span class="initialism">POST</span>) or in the query string (<span class="initialism">GET</span>). The only required parameter is <code>input[]</code>, which takes one or more tryptic peptides.
        </p>
        <h3>input</h3>
        <p>
          <code>input[]</code> is a required parameter that takes one or more tryptic peptides. Unipept will return the functional InterPro entries associated with each of the <code>input[]</code> peptides based on their occurrence in UniProt entries. To pass multiple peptides at once, simply add multiple <code>input[]</code> parameters (see <a href="#apidocs-example-multiple">example</a>).
        </p>
        <div class="apidocs-callout apidocs-callout-warning">
          <h4>Input size</h4>
          <p>Unipept puts no restrictions on the number of peptides passed to the <code>input[]</code> parameter. Keep in mind that searching for lots of peptides at once may cause the request to timeout or, in the case of a <span class="initialism">GET</span>-request, exceed the maximum URL length. When performing bulk searches, we suggest splitting the input set over requests of 100 peptides each.</p>
        </div>
        <h3>equate_il</h3>
        <p>
          <code>equate_il</code> is an optional parameter and can either be <code>true</code> or <code>false</code>. When not set explicitly, the parameter defaults to <code>false</code>. When the parameter is set to <code>true</code>, isoleucine (I) and leucine (L) are equated when matching tryptic peptides to UniProt entries. This setting is similar to checking the <i>Equate I and L?</i> checkbox when performing a search with the <%= link_to("Tryptic Peptide Analysis", search_single_path) %> in the web interface.
        </p>
        <h3>extra</h3>
        <p>
          <code>extra</code> is an optional parameter and can either be <code>true</code> or <code>false</code>. When not set explicitly, the parameter defaults to <code>false</code>. When the parameter is set to <code>true</code>, Unipept will also return the name and type associated with each InterPro entry. See the <a href="#response">response</a> section for an overview of the information fields returned.
        </p>
        <div class="apidocs-callout apidocs-callout-warning">
          <h4>Performance penalty</h4>
          <p>Setting <code>extra</code> to <code>true</code> has a performance penalty inferred from additional database queries. Do not use this parameter unless the extra information fields are needed.</p>
        </div>
      </div>
    </div>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='response'>Response</h2>
      </div>
      <div class='card-supporting-text'>
        <p>
          A list of  <span class="initialism">JSON</span> objects is returned. By default, each object contains the following information fields:
        </p>
        <ul>
          <li><code>peptide</code>: The peptide that was searched for.</li>
          <li><code>total_protein_count</code>: Total amount of proteins matched with the given peptide.</li>
          <li><code>ipr</code>: A list of <span class="initialism">JSON</span> objects that each represent an InterPro entry associated with the current tryptic peptide.
            <ul>
              <li><code>code</code>: InterPro entry code associated with the current tryptic peptide.</li>
              <li><code>protein_count</code>: amount of proteins matched with the given tryptic peptide that are labeled with the current InterPro code.</li>
              <li><code>name</code>: Optional, name of the InterPro entry. Included when the <code>extra</code> parameter is set to <code>true</code>.</li>
              <li><code>type</code>: Optional, type of the InterPro entry. Included when the <code>extra</code> parameter is set to <code>true</code>.</li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
    <div class='card'>
      <div class='card-title card-title-colored'>
        <h2 class='card-title-text' id='parameters'>Parameters</h2>
      </div>
      <div class='card-supporting-text'>
        <%= render "parameters", parameters: [
            {
                name: "input[]",
                required: true,
                optional: false,
                description: "Tryptic peptide to search for. Add multiple parameters to search for multiple peptides.",
                value: "String"
            },
            {
                name: "equate_il",
                required: false,
                optional: true,
                description: "Equate isoleucine (I) and leucine (L).",
                value: "Must be <code>true</code> or <code>false</code> (default)"
            },
            {
                name: "extra",
                required: false,
                optional: true,
                description: "Return additional information fields if <code>true</code>.",
                value: "Must be <code>true</code> or <code>false</code> (default)"
            }
        ]
        %>
      </div>
    </div>
    <h2 id="examples">Examples</h2>
    <%= render 'example',
               example_id: "apidocs-example-single",
               title: "Retrieve the functional InterPro entries associated with a given tryptic peptide",
               explanation: "<p>This example retrieves all functional InterPro entries associated with the tryptic peptide <i class='initialism'>AAAAA</i>.",
               post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2interpro \\
-d <span class='s1'>'input[]=AAAAA'</span>",
               get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA</a>",
               response: "<span class='p'>[</span>
    <span class='p'>{</span>
        <span class='nt'>'peptide'</span><span class='p'>:</span> <span class='s2'>'AAAAA'</span><span class='p'>,</span>
        <span class='nt'>'total_protein_count'</span><span class='p'>:</span> <span class='mi'>17</span><span class='p'>,</span>
        <span class='nt'>'ipr'</span><span class='p'>:</span> <span class='p'>[</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020867'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036291'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020630'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020631'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000672'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007634'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR038709'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR001296'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000394'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003181'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR013534'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR029053'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007046'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR011835'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003182'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
        <span class='p'>]</span>
    <span class='p'>}</span>
<span class='p'>]</span>
"
    %>
    <%= render 'example',
               example_id: "apidocs-example-multiple",
               title: "Retrieve the functional InterPro entries associated with each of multiple tryptic peptides",
               explanation: "<p>This example retrieves the functional InterPro entries for both the tryptic peptides <i class='initialism'>AAAAA</i> and <i class='initialism'>AAAYGMR</i>.",
               post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2interpro \\
-d <span class='s1'>'input[]=AAAAA'</span> \\
-d <span class='s1'>'input[]=AAAYGMR'</span>",
               get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA&input[]=AAAYGMR' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA&amp;input[]=AAAYGMR</a>",
               response: "<span class='p'>[</span>
    <span class='p'>{</span>
        <span class='nt'>'peptide'</span><span class='p'>:</span> <span class='s2'>'AAAAA'</span><span class='p'>,</span>
        <span class='nt'>'total_protein_count'</span><span class='p'>:</span> <span class='mi'>17</span><span class='p'>,</span>
        <span class='nt'>'ipr'</span><span class='p'>:</span> <span class='p'>[</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020867'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036291'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020630'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020631'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000672'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007634'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR038709'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR001296'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000394'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003181'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR013534'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR029053'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007046'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR011835'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003182'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
        <span class='p'>]</span>
    <span class='p'>},</span>
    <span class='p'>{</span>
        <span class='nt'>'peptide'</span><span class='p'>:</span> <span class='s2'>'AAAYGMR'</span><span class='p'>,</span>
        <span class='nt'>'total_protein_count'</span><span class='p'>:</span> <span class='mi'>2</span><span class='p'>,</span>
        <span class='nt'>'ipr'</span><span class='p'>:</span> <span class='p'>[</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR027417'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000185'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR011130'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036670'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036463'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036461'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR011115'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR008223'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR002019'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR002026'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR014018'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020937'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
        <span class='p'>]</span>
    <span class='p'>}</span>
<span class='p'>]</span>
"
    %>
    <%= render 'example',
               example_id: "apidocs-example-equate_il",
               title: "Retrieve the functional InterPro entries associated with a single tryptic peptide, while equating I and L",
               explanation: "<p>This example retrieves the functional InterPro entries associated with the tryptic peptide <i class='initialism'>AAAAA</i>. In searching, isoleucine (I) and leucinge (L) are considered equal.",
               post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2interpro \\
-d <span class='s1'>'input[]=AAAAA'</span> \\
-d <span class='s1'>'equate_il=true'</span>",
               get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA&equate_il=true' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA&amp;equate_il=true</a>",
               response: "<span class='p'>[</span>
    <span class='p'>{</span>
        <span class='nt'>'peptide'</span><span class='p'>:</span> <span class='s2'>'AAAAA'</span><span class='p'>,</span>
        <span class='nt'>'total_protein_count'</span><span class='p'>:</span> <span class='mi'>17</span><span class='p'>,</span>
        <span class='nt'>'ipr'</span><span class='p'>:</span> <span class='p'>[</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020867'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036291'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020630'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020631'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000672'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007634'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR038709'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR001296'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000394'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003181'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR013534'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR029053'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007046'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR011835'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003182'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span>
            <span class='p'>}</span>
        <span class='p'>]</span>
    <span class='p'>}</span>
<span class='p'>]</span>"
    %>
    <%= render 'example',
               example_id: "apidocs-example-extra",
               title: "Retrieve the functional InterPro entries associated with a single tryptic peptide, with extra information enabled",
               explanation: "<p>This example retrieves the functional InterPro entries associated with the tryptic peptide <i class='initialism'>AAAAA</i> including the name and type of each InterPro entry.",
               post_request: "<span class='gp'>$</span> curl -X POST -H <span class='s2'>'Accept: application/json'</span> #{Rails.application.config.api_host}/api/v1/pept2interpro \\
-d <span class='s1'>'input[]=AAAAA'</span> \\
-d <span class='s1'>'extra=true'</span>",
               get_request: "<a href='http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA&extra=true' target='_blank'>http://#{Rails.application.config.api_host}/api/v1/pept2interpro.json?input[]=AAAAA&amp;extra=true</a>",
               response: "<span class='p'>[</span>
    <span class='p'>{</span>
        <span class='nt'>'peptide'</span><span class='p'>:</span> <span class='s2'>'AAAAA'</span><span class='p'>,</span>
        <span class='nt'>'total_protein_count'</span><span class='p'>:</span> <span class='mi'>17</span><span class='p'>,</span>
        <span class='nt'>'ipr'</span><span class='p'>:</span> <span class='p'>[</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020867'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Tetrahydrofolate dehydrogenase/cyclohydrolase, conserved site'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Conserved_site'</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR036291'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>: </span> <span class='mi'>14</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'NAD(P)-binding domain superfamily'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Homologous_superfamily'</span>
            <span class='p'>},</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020630'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Tetrahydrofolate dehydrogenase/cyclohydrolase, conserved site'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Conserved_site'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR020631'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Tetrahydrofolate dehydrogenase/cyclohydrolase, NAD(P)-binding domain'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Domain'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000672'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>14</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Tetrahydrofolate dehydrogenase/cyclohydrolase'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Family'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007634'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'RNA polymerase sigma factor 54, DNA-binding'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Domain'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR038709'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'RNA polymerase sigma-54 factor, core-binding domain superfamily'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Homologous_superfamily'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR001296'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Glycosyl transferase, family 1'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Domain'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR000394'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'RNA polymerase sigma factor 54'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Family'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003181'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Large coat protein'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Family'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR013534'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Starch synthase, catalytic domain'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Domain'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR029053'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Viral coat protein subunit'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Homologous_superfamily'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR007046'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'RNA polymerase sigma factor 54, core-binding domain'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Domain'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR011835'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'Bacterial/plant glycogen synthase'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Family'</span>
            <span class='p'>}</span>
            <span class='p'>{</span>
                <span class='nt'>'code'</span><span class='p'>:</span> <span class='s2'>'IPR003182'</span><span class='p'>,</span>
                <span class='nt'>'protein_count'</span><span class='p'>:</span> <span class='mi'>1</span><span class='p'>,</span>
                <span class='nt'>'name'</span><span class='p'>:</span> <span class='s2'>'RNA2 polyprotein'</span><span class='p'>,</span>
                <span class='nt'>'type'</span><span class='p'>:</span> <span class='s2'>'Family'</span>
            <span class='p'>}</span>
        <span class='p'>]</span>
    <span class='p'>}</span>
<span class='p'>]</span>"
    %>
    <%= render 'tryit',
               name: "pept2interpro",
               input: true,
               equate_il: true,
               extra: true,
               names: false,
               domains: false
    %>
  </div>
  <div class="col-xs-3">
    <%= render 'api/shared/sidebar' %>
  </div>
</div>
